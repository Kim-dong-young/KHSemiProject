<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<entry key="selectListCount">
		SELECT COUNT(*) AS COUNT
		  FROM COMMUNITY
	</entry>
	
	<entry key="selectList">
		SELECT *
		FROM
		(
		    SELECT COMMUNITY_NUMBER,
		       COMMUNITY_TITLE,
		       TAB_NAME,
		       TAB_NUMBER,
		       COMMUNITY_VIEWCOUNT,
		       TO_CHAR(COMMUNITY_DATE,'YYYY-MM-DD') AS COMMUNITY_DATE,
		       MEMBER_NICKNAME,
		       COUNT(COMMUNITY_COMMENT_NUMBER) AS COMMENT_COUNT,  -- 댓글 수 카운트
		       ROW_NUMBER() OVER(ORDER BY COMMUNITY_DATE DESC) AS RNUM
		    FROM COMMUNITY
		    JOIN COMMUNITY_TAB USING(TAB_NUMBER)
		    JOIN MEMBER USING(MEMBER_NUMBER)
		    LEFT JOIN COMMUNITY_COMMENT USING(COMMUNITY_NUMBER)
		    GROUP BY COMMUNITY_TAB.TAB_NAME, COMMUNITY_NUMBER, COMMUNITY_TITLE, TAB_NAME, TAB_NUMBER, 
		             COMMUNITY_VIEWCOUNT, COMMUNITY_DATE, MEMBER_NICKNAME
		)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	<entry key="selectBoard">
		SELECT C.COMMUNITY_NUMBER,
		       C.COMMUNITY_TITLE,
		       C.COMMUNITY_CONTENT,
		       C.COMMUNITY_VIEWCOUNT,
		       C.COMMUNITY_DATE,
		       M.MEMBER_NICKNAME,
               C.MEMBER_NUMBER,
		       CT.TAB_NAME,
		       C.TAB_NUMBER,
		       COUNT(CL.MEMBER_NUMBER) AS LIKE_COUNT
		  FROM COMMUNITY C
		  JOIN MEMBER M ON(C.MEMBER_NUMBER = M.MEMBER_NUMBER)
		  JOIN COMMUNITY_TAB CT ON(CT.TAB_NUMBER = C.TAB_NUMBER)
	 LEFT JOIN COMMUNITY_LIKE CL ON(C.COMMUNITY_NUMBER = CL.COMMUNITY_NUMBER)
		 WHERE C.COMMUNITY_NUMBER = ?
	  GROUP BY C.COMMUNITY_NUMBER,
		       C.COMMUNITY_TITLE,
		       C.COMMUNITY_CONTENT,
		       C.COMMUNITY_VIEWCOUNT,
		       C.COMMUNITY_DATE,
		       M.MEMBER_NICKNAME,
               C.MEMBER_NUMBER,
		       CT.TAB_NAME,
		       C.TAB_NUMBER
	</entry>
	<entry key="countBoardComment">
		SELECT COUNT(*) AS COMMENT_COUNT
		  FROM COMMUNITY_COMMENT
		 WHERE COMMUNITY_NUMBER = ?
	</entry>
	<entry key="selectCommentList">
		SELECT COMMUNITY_COMMENT_NUMBER ,
			   COMMUNITY_PARENT_NUMBER ,
			   COMMUNITY_NUMBER ,
			   MEMBER_NICKNAME ,
			   MEMBER_NUMBER ,
			   COMMUNITY_COMMENT_CONTENT
		FROM
		(
		    SELECT COMMUNITY_COMMENT_NUMBER ,
			   COMMUNITY_PARENT_NUMBER ,
			   COMMUNITY_NUMBER ,
			   MEMBER_NICKNAME ,
			   MEMBER_NUMBER ,
			   COMMUNITY_COMMENT_CONTENT ,
		       ROW_NUMBER() OVER(ORDER BY COMMUNITY_COMMENT_DATE) AS RNUM
		    FROM COMMUNITY_COMMENT
		  JOIN MEMBER USING (MEMBER_NUMBER)
		 WHERE COMMUNITY_NUMBER = ?
		   AND COMMUNITY_PARENT_NUMBER IS NULL
		)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	<entry key="increaseViewCount">
		UPDATE COMMUNITY
		   SET COMMUNITY_VIEWCOUNT = COMMUNITY_VIEWCOUNT + 1
		 WHERE COMMUNITY_NUMBER = ?
	</entry>
	<entry key="selectCategory">
		SELECT TAB_NUMBER,
	    	   TAB_NAME
	      FROM COMMUNITY_TAB
	</entry>
	<entry key="selectUserCategory">
		SELECT TAB_NUMBER,
	    	   TAB_NAME
	      FROM COMMUNITY_TAB
	     WHERE TAB_NUMBER != 1  -- 1은 공지탭
	</entry>
	<entry key="insertBoard">
		INSERT INTO COMMUNITY
		(
		    COMMUNITY_NUMBER,
		    COMMUNITY_TITLE,
		    COMMUNITY_CONTENT,
		    COMMUNITY_VIEWCOUNT,
		    COMMUNITY_DATE,
		    MEMBER_NUMBER,
		    TAB_NUMBER
		)
		VALUES
		(
		    SEQ_COMMUNITY.NEXTVAL,
		    ?,
		    ?,
		    0,
		    SYSDATE,
		    ?,
		    ?
		)
	</entry>
	<entry key="insertComment">
		INSERT INTO COMMUNITY_COMMENT
		(
		    COMMUNITY_COMMENT_NUMBER,
		    COMMUNITY_NUMBER,
		    MEMBER_NUMBER,
		    COMMUNITY_COMMENT_CONTENT,
		    COMMUNITY_COMMENT_DATE
		)
		VALUES
		(
		    SEQ_COMMUNITY_COMMENT.NEXTVAL,
		    ?,
		    ?,
		    ?,
		    SYSDATE
		)
	</entry>
	<entry key="deleteComment">
		DELETE
		  FROM COMMUNITY_COMMENT
		 WHERE COMMUNITY_NUMBER = ?
	</entry>
	<entry key="deleteCommunityLike">
		DELETE
		  FROM COMMUNITY_LIKE
		 WHERE COMMUNITY_NUMBER = ?
	</entry>
	<entry key="deleteBoard">
		DELETE
		  FROM COMMUNITY
		 WHERE COMMUNITY_NUMBER = ?
	</entry>
	<entry key="deleteMemberComment">
		DELETE
		  FROM COMMUNITY_COMMENT
		 WHERE COMMUNITY_COMMENT_NUMBER = ?
	</entry>
	<entry key="selectBoardTabList">
		SELECT *
		FROM
		(
		    SELECT COMMUNITY_NUMBER,
		       COMMUNITY_TITLE,
		       TAB_NAME,
		       TAB_NUMBER,
		       COMMUNITY_VIEWCOUNT,
		       TO_CHAR(COMMUNITY_DATE,'YYYY-MM-DD') AS COMMUNITY_DATE,
		       MEMBER_NICKNAME,
		       COUNT(COMMUNITY_COMMENT_NUMBER) AS COMMENT_COUNT,  -- 댓글 수 카운트
		       ROW_NUMBER() OVER(ORDER BY COMMUNITY_DATE DESC) AS RNUM
		    FROM COMMUNITY
		    JOIN COMMUNITY_TAB USING(TAB_NUMBER)
		    JOIN MEMBER USING(MEMBER_NUMBER)
		    LEFT JOIN COMMUNITY_COMMENT USING(COMMUNITY_NUMBER)
            WHERE TAB_NUMBER = ?
		    GROUP BY COMMUNITY_TAB.TAB_NAME, COMMUNITY_NUMBER, COMMUNITY_TITLE, TAB_NAME, TAB_NUMBER,
		             COMMUNITY_VIEWCOUNT, COMMUNITY_DATE, MEMBER_NICKNAME
		)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	<entry key="selectBoardTabListCount">
		SELECT COUNT(*) AS COUNT
		  FROM COMMUNITY
		 WHERE TAB_NUMBER = ?
	</entry>
	<entry key="selectBoardPopListCount">
		SELECT COUNT(*) AS COUNT
		FROM (
		    SELECT COMMUNITY_NUMBER
		    FROM COMMUNITY_LIKE
		    GROUP BY COMMUNITY_NUMBER
		    HAVING COUNT(*) > 1  -- 좋아요 수가 1개 이상인 게시글 필터링
		)
	</entry>
	<entry key="selectBoardPopList">
		WITH POPULAR_COMMUNITY AS (
		    SELECT COMMUNITY_NUMBER
		    FROM COMMUNITY_LIKE
		    GROUP BY COMMUNITY_NUMBER
		    HAVING COUNT(*) > 1  -- 좋아요 수가 1개 이상인 게시글 필터링
		)
		SELECT community_number COMMUNITY_NUMBER,
		community_title COMMUNITY_TITLE,
		tab_name TAB_NAME,
		tab_number TAB_NUMBER,
		community_viewcount COMMUNITY_VIEWCOUNT,
		community_date COMMUNITY_DATE,
		member_nickname MEMBER_NICKNAME,
		comment_count COMMENT_COUNT
		FROM (
		    SELECT C.COMMUNITY_NUMBER,
		           C.COMMUNITY_TITLE,
		           CT.TAB_NAME,
		           C.TAB_NUMBER,
		           C.COMMUNITY_VIEWCOUNT,
		           TO_CHAR(C.COMMUNITY_DATE, 'YYYY-MM-DD') AS COMMUNITY_DATE,
		           M.MEMBER_NICKNAME,
		           COUNT(CC.COMMUNITY_COMMENT_NUMBER) AS COMMENT_COUNT,  -- 댓글 수 카운트
		           ROW_NUMBER() OVER(ORDER BY C.COMMUNITY_DATE DESC) AS RNUM
		    FROM COMMUNITY C
		    JOIN COMMUNITY_TAB CT ON C.TAB_NUMBER = CT.TAB_NUMBER
		    JOIN MEMBER M ON C.MEMBER_NUMBER = M.MEMBER_NUMBER
		    LEFT JOIN COMMUNITY_COMMENT CC ON C.COMMUNITY_NUMBER = CC.COMMUNITY_NUMBER
		    WHERE C.COMMUNITY_NUMBER IN (SELECT COMMUNITY_NUMBER FROM POPULAR_COMMUNITY)
		    GROUP BY C.COMMUNITY_NUMBER, C.COMMUNITY_TITLE, CT.TAB_NAME, C.TAB_NUMBER, C.COMMUNITY_VIEWCOUNT, C.COMMUNITY_DATE, 
		            M.MEMBER_NICKNAME
		)
		WHERE RNUM BETWEEN ? AND ?  -- 페이징 처리
	</entry>
	<entry key="selectLikeMember">
		SELECT MEMBER_NUMBER,
		       COMMUNITY_NUMBER
		  FROM COMMUNITY_LIKE
		 WHERE MEMBER_NUMBER = ?
		   AND COMMUNITY_NUMBER = ?
	</entry>
	<entry key="increaseLike">
		INSERT INTO COMMUNITY_LIKE
		(
			MEMBER_NUMBER,
			COMMUNITY_NUMBER
		)
		VALUES
		(
			?,
			?
		)
	</entry>
	<entry key="countBoardLike">
	   SELECT COUNT(*) AS COUNT
		 FROM COMMUNITY_LIKE
		WHERE COMMUNITY_NUMBER = ?
	</entry>
	<entry key="selectBoardTop5">
		WITH POPULAR_COMMUNITY AS (
		    SELECT COMMUNITY_NUMBER
		    FROM COMMUNITY_LIKE
		    GROUP BY COMMUNITY_NUMBER
		    HAVING COUNT(*) > 1  -- 좋아요 수가 1개 이상인 게시글 필터링
		)
		SELECT community_number COMMUNITY_NUMBER,
		community_title COMMUNITY_TITLE,
		tab_name TAB_NAME,
		tab_number TAB_NUMBER,
		member_nickname MEMBER_NICKNAME,
		comment_count COMMENT_COUNT
		FROM
		(
		    SELECT C.COMMUNITY_NUMBER,
		        C.COMMUNITY_TITLE,
		        CT.TAB_NAME,
		        C.TAB_NUMBER,
		        M.MEMBER_NICKNAME,
		        COUNT(CC.COMMUNITY_COMMENT_NUMBER) AS COMMENT_COUNT,
		        ROW_NUMBER() OVER(ORDER BY COUNT(CC.COMMUNITY_COMMENT_NUMBER) DESC) AS RNUM
		    FROM COMMUNITY C
		    JOIN MEMBER M ON (C.MEMBER_NUMBER = M.MEMBER_NUMBER)
		    JOIN COMMUNITY_TAB CT ON(C.TAB_NUMBER = CT.TAB_NUMBER)
		    LEFT JOIN COMMUNITY_COMMENT CC ON(C.COMMUNITY_NUMBER = CC.COMMUNITY_NUMBER)
		    WHERE (SYSDATE - COMMUNITY_DATE) * 24 &lt; 900 -- 현재시간 - 날짜 * 24 = 시간단위 차이
		        AND C.COMMUNITY_NUMBER IN (SELECT COMMUNITY_NUMBER FROM POPULAR_COMMUNITY)
		    GROUP BY C.COMMUNITY_NUMBER, C.COMMUNITY_TITLE, CT.TAB_NAME, C.TAB_NUMBER, M.MEMBER_NICKNAME
		)
		WHERE RNUM BETWEEN 1 AND 5
	</entry>
	<entry key="searchListCount">
		SELECT COUNT(*) AS COUNT
		  FROM COMMUNITY
		  JOIN MEMBER USING(MEMBER_NUMBER)
		 WHERE COMMUNITY_TITLE LIKE '%' || ? || '%'
		    OR COMMUNITY_CONTENT LIKE '%' || ? || '%'
		    OR MEMBER_NICKNAME LIKE '%' || ? || '%'
	</entry>
	<entry key="searchList">
		SELECT *
		FROM
		(
		    SELECT COMMUNITY_NUMBER,
		       COMMUNITY_TITLE,
		       TAB_NAME,
		       TAB_NUMBER,
		       COMMUNITY_VIEWCOUNT,
		       TO_CHAR(COMMUNITY_DATE,'YYYY-MM-DD') AS COMMUNITY_DATE,
		       MEMBER_NICKNAME,
		       COUNT(COMMUNITY_COMMENT_NUMBER) AS COMMENT_COUNT,  -- 댓글 수 카운트
		       ROW_NUMBER() OVER(ORDER BY COMMUNITY_DATE DESC) AS RNUM
		    FROM COMMUNITY
		    JOIN COMMUNITY_TAB USING(TAB_NUMBER)
		    JOIN MEMBER USING(MEMBER_NUMBER)
		    LEFT JOIN COMMUNITY_COMMENT USING(COMMUNITY_NUMBER)
		    WHERE COMMUNITY_TITLE LIKE '%' || ? || '%'
		        OR COMMUNITY_CONTENT LIKE '%' || ? || '%'
		        OR MEMBER_NICKNAME LIKE '%' || ? || '%'
		    GROUP BY COMMUNITY_TAB.TAB_NAME, COMMUNITY_NUMBER, COMMUNITY_TITLE, TAB_NAME, TAB_NUMBER, 
		             COMMUNITY_VIEWCOUNT, COMMUNITY_DATE, MEMBER_NICKNAME
		)
		WHERE RNUM BETWEEN 1 AND 10
	</entry>
	<entry key="searchBoardPopListCount">
		WITH POPULAR_BOARD AS (
		        SELECT COMMUNITY_NUMBER
		        FROM COMMUNITY_LIKE
		        GROUP BY COMMUNITY_NUMBER
		        HAVING COUNT(*) > 1  -- 좋아요 수가 1개 이상인 게시글 필터링
		) SELECT COUNT(*) AS COUNT
		FROM COMMUNITY
		JOIN MEMBER USING(MEMBER_NUMBER)
		WHERE (COMMUNITY_NUMBER IN (SELECT COMMUNITY_NUMBER FROM POPULAR_BOARD))
		    AND (COMMUNITY_TITLE LIKE '%' || ? || '%'
		    OR COMMUNITY_CONTENT LIKE '%' || ? || '%'
		    OR MEMBER_NICKNAME LIKE '%' || ? || '%')
	</entry>
	<entry key="searchBoardTabListCount">
		SELECT COUNT(*) AS COUNT
		  FROM COMMUNITY
		  JOIN MEMBER USING (MEMBER_NUMBER)
		 WHERE (TAB_NUMBER = ?)
		   AND (COMMUNITY_TITLE LIKE '%' || ? || '%'
		    OR COMMUNITY_CONTENT LIKE '%' || ? || '%'
		    OR MEMBER_NICKNAME LIKE '%' || ? || '%')
	</entry>
	<entry key="searchList">
		SELECT community_number COMMUNITY_NUMBER,
        community_title COMMUNITY_TITLE,
        tab_name TAB_NAME,
        tab_number TAB_NUMBER,
        community_viewcount COMMUNITY_VIEWCOUNT,
        community_date COMMUNITY_DATE,
        member_nickname MEMBER_NICKNAME,
        comment_count COMMENT_COUNT
		FROM
		(
		    SELECT COMMUNITY_NUMBER,
		       COMMUNITY_TITLE,
		       TAB_NAME,
		       TAB_NUMBER,
		       COMMUNITY_VIEWCOUNT,
		       TO_CHAR(COMMUNITY_DATE,'YYYY-MM-DD') AS COMMUNITY_DATE,
		       MEMBER_NICKNAME,
		       COUNT(COMMUNITY_COMMENT_NUMBER) AS COMMENT_COUNT,  -- 댓글 수 카운트
		       ROW_NUMBER() OVER(ORDER BY COMMUNITY_DATE DESC) AS RNUM
		    FROM COMMUNITY
		    JOIN COMMUNITY_TAB USING(TAB_NUMBER)
		    JOIN MEMBER USING(MEMBER_NUMBER)
		    LEFT JOIN COMMUNITY_COMMENT USING(COMMUNITY_NUMBER)
            WHERE COMMUNITY_TITLE LIKE '%' || ? || '%'
                OR COMMUNITY_CONTENT LIKE '%' || ? || '%'
                OR MEMBER_NICKNAME LIKE '%' || ? || '%'
		    GROUP BY COMMUNITY_TAB.TAB_NAME, COMMUNITY_NUMBER, COMMUNITY_TITLE, TAB_NAME, TAB_NUMBER, 
		             COMMUNITY_VIEWCOUNT, COMMUNITY_DATE, MEMBER_NICKNAME
		)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	<entry key="searchBoardPopList">
		WITH POPULAR_COMMUNITY AS (
			    SELECT COMMUNITY_NUMBER
			    FROM COMMUNITY_LIKE
			    GROUP BY COMMUNITY_NUMBER
			    HAVING COUNT(*) > 1  -- 좋아요 수가 1개 이상인 게시글 필터링
			)
			SELECT community_number COMMUNITY_NUMBER,
			community_title COMMUNITY_TITLE,
			tab_name TAB_NAME,
			tab_number TAB_NUMBER,
			community_viewcount COMMUNITY_VIEWCOUNT,
			community_date COMMUNITY_DATE,
			member_nickname MEMBER_NICKNAME,
			comment_count COMMENT_COUNT
			FROM (
			    SELECT C.COMMUNITY_NUMBER,
			           C.COMMUNITY_TITLE,
			           CT.TAB_NAME,
			           C.TAB_NUMBER,
			           C.COMMUNITY_VIEWCOUNT,
			           TO_CHAR(C.COMMUNITY_DATE, 'YYYY-MM-DD') AS COMMUNITY_DATE,
			           M.MEMBER_NICKNAME,
			           COUNT(CC.COMMUNITY_COMMENT_NUMBER) AS COMMENT_COUNT,  -- 댓글 수 카운트
			           ROW_NUMBER() OVER(ORDER BY C.COMMUNITY_DATE DESC) AS RNUM
			    FROM COMMUNITY C
			    JOIN COMMUNITY_TAB CT ON C.TAB_NUMBER = CT.TAB_NUMBER
			    JOIN MEMBER M ON C.MEMBER_NUMBER = M.MEMBER_NUMBER
			    LEFT JOIN COMMUNITY_COMMENT CC ON C.COMMUNITY_NUMBER = CC.COMMUNITY_NUMBER
			    WHERE (C.COMMUNITY_NUMBER IN (SELECT COMMUNITY_NUMBER FROM POPULAR_COMMUNITY))
	              AND (COMMUNITY_TITLE LIKE '%' || ? || '%'
	                OR COMMUNITY_CONTENT LIKE '%' || ? || '%'
	                OR MEMBER_NICKNAME LIKE '%' || ? || '%')
			    GROUP BY C.COMMUNITY_NUMBER, C.COMMUNITY_TITLE, CT.TAB_NAME, C.TAB_NUMBER, C.COMMUNITY_VIEWCOUNT, C.COMMUNITY_DATE, 
			            M.MEMBER_NICKNAME
			)
			WHERE RNUM BETWEEN ? AND ?  -- 페이징 처리
	</entry>
	<entry key="searchBoardTabList">
		SELECT *
		FROM
		(
		    SELECT COMMUNITY_NUMBER,
		       COMMUNITY_TITLE,
		       TAB_NAME,
		       TAB_NUMBER,
		       COMMUNITY_VIEWCOUNT,
		       TO_CHAR(COMMUNITY_DATE,'YYYY-MM-DD') AS COMMUNITY_DATE,
		       MEMBER_NICKNAME,
		       COUNT(COMMUNITY_COMMENT_NUMBER) AS COMMENT_COUNT,  -- 댓글 수 카운트
		       ROW_NUMBER() OVER(ORDER BY COMMUNITY_DATE DESC) AS RNUM
		    FROM COMMUNITY
		    JOIN COMMUNITY_TAB USING(TAB_NUMBER)
		    JOIN MEMBER USING(MEMBER_NUMBER)
		    LEFT JOIN COMMUNITY_COMMENT USING(COMMUNITY_NUMBER)
            WHERE (TAB_NUMBER = ?)
              AND (COMMUNITY_TITLE LIKE '%' || ? || '%'
	                OR COMMUNITY_CONTENT LIKE '%' || ? || '%'
	                OR MEMBER_NICKNAME LIKE '%' || ? || '%')
		    GROUP BY COMMUNITY_TAB.TAB_NAME, COMMUNITY_NUMBER, COMMUNITY_TITLE, TAB_NAME, TAB_NUMBER,
		             COMMUNITY_VIEWCOUNT, COMMUNITY_DATE, MEMBER_NICKNAME
		)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	<entry key="searchTitleCount">
		SELECT COUNT(*) AS COUNT
		  FROM COMMUNITY
		 WHERE COMMUNITY_TITLE LIKE '%' || ? || '%'
	</entry>
	<entry key="searchTitlePopListCount">
			WITH POPULAR_BOARD AS (
		        SELECT COMMUNITY_NUMBER
		        FROM COMMUNITY_LIKE
		        GROUP BY COMMUNITY_NUMBER
		        HAVING COUNT(*) > 1  -- 좋아요 수가 1개 이상인 게시글 필터링
		) SELECT COUNT(*) AS COUNT
		FROM COMMUNITY
		WHERE (COMMUNITY_NUMBER IN (SELECT COMMUNITY_NUMBER FROM POPULAR_BOARD))
		    AND (COMMUNITY_TITLE LIKE '%' || ? || '%')
	</entry>
	<entry key="searchTitleTabListCount">
		SELECT COUNT(*) AS COUNT
		  FROM COMMUNITY
		 WHERE (TAB_NUMBER = ?)
		   AND (COMMUNITY_TITLE LIKE '%' || ? || '%')
	</entry>
	<entry key="searchTitleList">
		SELECT community_number COMMUNITY_NUMBER,
        community_title COMMUNITY_TITLE,
        tab_name TAB_NAME,
        tab_number TAB_NUMBER,
        community_viewcount COMMUNITY_VIEWCOUNT,
        community_date COMMUNITY_DATE,
        member_nickname MEMBER_NICKNAME,
        comment_count COMMENT_COUNT
		FROM
		(
		    SELECT COMMUNITY_NUMBER,
		       COMMUNITY_TITLE,
		       TAB_NAME,
		       TAB_NUMBER,
		       COMMUNITY_VIEWCOUNT,
		       TO_CHAR(COMMUNITY_DATE,'YYYY-MM-DD') AS COMMUNITY_DATE,
		       MEMBER_NICKNAME,
		       COUNT(COMMUNITY_COMMENT_NUMBER) AS COMMENT_COUNT,  -- 댓글 수 카운트
		       ROW_NUMBER() OVER(ORDER BY COMMUNITY_DATE DESC) AS RNUM
		    FROM COMMUNITY
		    JOIN COMMUNITY_TAB USING(TAB_NUMBER)
		    JOIN MEMBER USING(MEMBER_NUMBER)
		    LEFT JOIN COMMUNITY_COMMENT USING(COMMUNITY_NUMBER)
            WHERE COMMUNITY_TITLE LIKE '%' || ? || '%'
		    GROUP BY COMMUNITY_TAB.TAB_NAME, COMMUNITY_NUMBER, COMMUNITY_TITLE, TAB_NAME, TAB_NUMBER, 
		             COMMUNITY_VIEWCOUNT, COMMUNITY_DATE, MEMBER_NICKNAME
		)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	<entry key="searchTitlePopList">
		WITH POPULAR_COMMUNITY AS (
			    SELECT COMMUNITY_NUMBER
			    FROM COMMUNITY_LIKE
			    GROUP BY COMMUNITY_NUMBER
			    HAVING COUNT(*) > 1  -- 좋아요 수가 1개 이상인 게시글 필터링
			)
			SELECT community_number COMMUNITY_NUMBER,
			community_title COMMUNITY_TITLE,
			tab_name TAB_NAME,
			tab_number TAB_NUMBER,
			community_viewcount COMMUNITY_VIEWCOUNT,
			community_date COMMUNITY_DATE,
			member_nickname MEMBER_NICKNAME,
			comment_count COMMENT_COUNT
			FROM (
			    SELECT C.COMMUNITY_NUMBER,
			           C.COMMUNITY_TITLE,
			           CT.TAB_NAME,
			           C.TAB_NUMBER,
			           C.COMMUNITY_VIEWCOUNT,
			           TO_CHAR(C.COMMUNITY_DATE, 'YYYY-MM-DD') AS COMMUNITY_DATE,
			           M.MEMBER_NICKNAME,
			           COUNT(CC.COMMUNITY_COMMENT_NUMBER) AS COMMENT_COUNT,  -- 댓글 수 카운트
			           ROW_NUMBER() OVER(ORDER BY C.COMMUNITY_DATE DESC) AS RNUM
			    FROM COMMUNITY C
			    JOIN COMMUNITY_TAB CT ON C.TAB_NUMBER = CT.TAB_NUMBER
			    JOIN MEMBER M ON C.MEMBER_NUMBER = M.MEMBER_NUMBER
			    LEFT JOIN COMMUNITY_COMMENT CC ON C.COMMUNITY_NUMBER = CC.COMMUNITY_NUMBER
			    WHERE (C.COMMUNITY_NUMBER IN (SELECT COMMUNITY_NUMBER FROM POPULAR_COMMUNITY))
	              AND (COMMUNITY_TITLE LIKE '%' || ? || '%')
			    GROUP BY C.COMMUNITY_NUMBER, C.COMMUNITY_TITLE, CT.TAB_NAME, C.TAB_NUMBER, C.COMMUNITY_VIEWCOUNT, C.COMMUNITY_DATE, 
			            M.MEMBER_NICKNAME
			)
			WHERE RNUM BETWEEN ? AND ?  -- 페이징 처리
	</entry>
	<entry key="searchTitleTabList">
		SELECT *
		FROM
		(
		    SELECT COMMUNITY_NUMBER,
		       COMMUNITY_TITLE,
		       TAB_NAME,
		       TAB_NUMBER,
		       COMMUNITY_VIEWCOUNT,
		       TO_CHAR(COMMUNITY_DATE,'YYYY-MM-DD') AS COMMUNITY_DATE,
		       MEMBER_NICKNAME,
		       COUNT(COMMUNITY_COMMENT_NUMBER) AS COMMENT_COUNT,  -- 댓글 수 카운트
		       ROW_NUMBER() OVER(ORDER BY COMMUNITY_DATE DESC) AS RNUM
		    FROM COMMUNITY
		    JOIN COMMUNITY_TAB USING(TAB_NUMBER)
		    JOIN MEMBER USING(MEMBER_NUMBER)
		    LEFT JOIN COMMUNITY_COMMENT USING(COMMUNITY_NUMBER)
            WHERE (TAB_NUMBER = ?)
              AND (COMMUNITY_TITLE LIKE '%' || ? || '%')
		    GROUP BY COMMUNITY_TAB.TAB_NAME, COMMUNITY_NUMBER, COMMUNITY_TITLE, TAB_NAME, TAB_NUMBER,
		             COMMUNITY_VIEWCOUNT, COMMUNITY_DATE, MEMBER_NICKNAME
		)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	<entry key="searchContentCount">
		SELECT COUNT(*) AS COUNT
		  FROM COMMUNITY
		 WHERE COMMUNITY_CONTENT LIKE '%' || ? || '%'
	</entry>
	<entry key="searchContentPopListCount">
		WITH POPULAR_BOARD AS (
		        SELECT COMMUNITY_NUMBER
		        FROM COMMUNITY_LIKE
		        GROUP BY COMMUNITY_NUMBER
		        HAVING COUNT(*) > 1  -- 좋아요 수가 1개 이상인 게시글 필터링
		) SELECT COUNT(*) AS COUNT
		FROM COMMUNITY
		WHERE (COMMUNITY_NUMBER IN (SELECT COMMUNITY_NUMBER FROM POPULAR_BOARD))
		    AND (COMMUNITY_CONTENT LIKE '%' || ? || '%')
	</entry>
	<entry key="searchContentTabListCount">
		SELECT COUNT(*) AS COUNT
		  FROM COMMUNITY
		 WHERE (TAB_NUMBER = ?)
		   AND (COMMUNITY_CONTENT LIKE '%' || ? || '%')
	</entry>
	<entry key="searchContentList">
		SELECT community_number COMMUNITY_NUMBER,
        community_title COMMUNITY_TITLE,
        tab_name TAB_NAME,
        tab_number TAB_NUMBER,
        community_viewcount COMMUNITY_VIEWCOUNT,
        community_date COMMUNITY_DATE,
        member_nickname MEMBER_NICKNAME,
        comment_count COMMENT_COUNT
		FROM
		(
		    SELECT COMMUNITY_NUMBER,
		       COMMUNITY_TITLE,
		       TAB_NAME,
		       TAB_NUMBER,
		       COMMUNITY_VIEWCOUNT,
		       TO_CHAR(COMMUNITY_DATE,'YYYY-MM-DD') AS COMMUNITY_DATE,
		       MEMBER_NICKNAME,
		       COUNT(COMMUNITY_COMMENT_NUMBER) AS COMMENT_COUNT,  -- 댓글 수 카운트
		       ROW_NUMBER() OVER(ORDER BY COMMUNITY_DATE DESC) AS RNUM
		    FROM COMMUNITY
		    JOIN COMMUNITY_TAB USING(TAB_NUMBER)
		    JOIN MEMBER USING(MEMBER_NUMBER)
		    LEFT JOIN COMMUNITY_COMMENT USING(COMMUNITY_NUMBER)
            WHERE COMMUNITY_CONTENT LIKE '%' || ? || '%'
		    GROUP BY COMMUNITY_TAB.TAB_NAME, COMMUNITY_NUMBER, COMMUNITY_TITLE, TAB_NAME, TAB_NUMBER, 
		             COMMUNITY_VIEWCOUNT, COMMUNITY_DATE, MEMBER_NICKNAME
		)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	<entry key="searchContentPopList">
		WITH POPULAR_COMMUNITY AS (
			    SELECT COMMUNITY_NUMBER
			    FROM COMMUNITY_LIKE
			    GROUP BY COMMUNITY_NUMBER
			    HAVING COUNT(*) > 1  -- 좋아요 수가 1개 이상인 게시글 필터링
			)
			SELECT community_number COMMUNITY_NUMBER,
			community_title COMMUNITY_TITLE,
			tab_name TAB_NAME,
			tab_number TAB_NUMBER,
			community_viewcount COMMUNITY_VIEWCOUNT,
			community_date COMMUNITY_DATE,
			member_nickname MEMBER_NICKNAME,
			comment_count COMMENT_COUNT
			FROM (
			    SELECT C.COMMUNITY_NUMBER,
			           C.COMMUNITY_TITLE,
			           CT.TAB_NAME,
			           C.TAB_NUMBER,
			           C.COMMUNITY_VIEWCOUNT,
			           TO_CHAR(C.COMMUNITY_DATE, 'YYYY-MM-DD') AS COMMUNITY_DATE,
			           M.MEMBER_NICKNAME,
			           COUNT(CC.COMMUNITY_COMMENT_NUMBER) AS COMMENT_COUNT,  -- 댓글 수 카운트
			           ROW_NUMBER() OVER(ORDER BY C.COMMUNITY_DATE DESC) AS RNUM
			    FROM COMMUNITY C
			    JOIN COMMUNITY_TAB CT ON C.TAB_NUMBER = CT.TAB_NUMBER
			    JOIN MEMBER M ON C.MEMBER_NUMBER = M.MEMBER_NUMBER
			    LEFT JOIN COMMUNITY_COMMENT CC ON C.COMMUNITY_NUMBER = CC.COMMUNITY_NUMBER
			    WHERE (C.COMMUNITY_NUMBER IN (SELECT COMMUNITY_NUMBER FROM POPULAR_COMMUNITY))
	              AND (COMMUNITY_CONTENT LIKE '%' || ? || '%')
			    GROUP BY C.COMMUNITY_NUMBER, C.COMMUNITY_TITLE, CT.TAB_NAME, C.TAB_NUMBER, C.COMMUNITY_VIEWCOUNT, C.COMMUNITY_DATE, 
			            M.MEMBER_NICKNAME
			)
			WHERE RNUM BETWEEN ? AND ?  -- 페이징 처리
	</entry>
	<entry key="searchContentTabList">
		SELECT *
		FROM
		(
		    SELECT COMMUNITY_NUMBER,
		       COMMUNITY_TITLE,
		       TAB_NAME,
		       TAB_NUMBER,
		       COMMUNITY_VIEWCOUNT,
		       TO_CHAR(COMMUNITY_DATE,'YYYY-MM-DD') AS COMMUNITY_DATE,
		       MEMBER_NICKNAME,
		       COUNT(COMMUNITY_COMMENT_NUMBER) AS COMMENT_COUNT,  -- 댓글 수 카운트
		       ROW_NUMBER() OVER(ORDER BY COMMUNITY_DATE DESC) AS RNUM
		    FROM COMMUNITY
		    JOIN COMMUNITY_TAB USING(TAB_NUMBER)
		    JOIN MEMBER USING(MEMBER_NUMBER)
		    LEFT JOIN COMMUNITY_COMMENT USING(COMMUNITY_NUMBER)
            WHERE (TAB_NUMBER = ?)
              AND (COMMUNITY_CONTENT LIKE '%' || ? || '%')
		    GROUP BY COMMUNITY_TAB.TAB_NAME, COMMUNITY_NUMBER, COMMUNITY_TITLE, TAB_NAME, TAB_NUMBER,
		             COMMUNITY_VIEWCOUNT, COMMUNITY_DATE, MEMBER_NICKNAME
		)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	<entry key="searchWriterCount">
		SELECT COUNT(*) AS COUNT
		  FROM COMMUNITY
		  JOIN MEMBER USING(MEMBER_NUMBER)
		 WHERE MEMBER_NICKNAME LIKE '%' || ? || '%'
	</entry>
	<entry key="searchWriterPopListCount">
		WITH POPULAR_BOARD AS (
		        SELECT COMMUNITY_NUMBER
		        FROM COMMUNITY_LIKE
		        GROUP BY COMMUNITY_NUMBER
		        HAVING COUNT(*) > 1  -- 좋아요 수가 1개 이상인 게시글 필터링
		) SELECT COUNT(*) AS COUNT
		FROM COMMUNITY
		JOIN MEMBER USING(MEMBER_NUMBER)
		WHERE (COMMUNITY_NUMBER IN (SELECT COMMUNITY_NUMBER FROM POPULAR_BOARD))
		    AND (MEMBER_NICKNAME LIKE '%' || ? || '%')
	</entry>
	<entry key="searchWriterTabListCount">
		SELECT COUNT(*) AS COUNT
		  FROM COMMUNITY
		  JOIN MEMBER USING (MEMBER_NUMBER)
		 WHERE (TAB_NUMBER = ?)
		   AND (MEMBER_NICKNAME LIKE '%' || ? || '%')
	</entry>
	<entry key="searchWriterList">
		SELECT community_number COMMUNITY_NUMBER,
        community_title COMMUNITY_TITLE,
        tab_name TAB_NAME,
        tab_number TAB_NUMBER,
        community_viewcount COMMUNITY_VIEWCOUNT,
        community_date COMMUNITY_DATE,
        member_nickname MEMBER_NICKNAME,
        comment_count COMMENT_COUNT
		FROM
		(
		    SELECT COMMUNITY_NUMBER,
		       COMMUNITY_TITLE,
		       TAB_NAME,
		       TAB_NUMBER,
		       COMMUNITY_VIEWCOUNT,
		       TO_CHAR(COMMUNITY_DATE,'YYYY-MM-DD') AS COMMUNITY_DATE,
		       MEMBER_NICKNAME,
		       COUNT(COMMUNITY_COMMENT_NUMBER) AS COMMENT_COUNT,  -- 댓글 수 카운트
		       ROW_NUMBER() OVER(ORDER BY COMMUNITY_DATE DESC) AS RNUM
		    FROM COMMUNITY
		    JOIN COMMUNITY_TAB USING(TAB_NUMBER)
		    JOIN MEMBER USING(MEMBER_NUMBER)
		    LEFT JOIN COMMUNITY_COMMENT USING(COMMUNITY_NUMBER)
            WHERE MEMBER_NICKNAME LIKE '%' || ? || '%'
		    GROUP BY COMMUNITY_TAB.TAB_NAME, COMMUNITY_NUMBER, COMMUNITY_TITLE, TAB_NAME, TAB_NUMBER, 
		             COMMUNITY_VIEWCOUNT, COMMUNITY_DATE, MEMBER_NICKNAME
		)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	<entry key="searchWriterPopList">
		WITH POPULAR_COMMUNITY AS (
			    SELECT COMMUNITY_NUMBER
			    FROM COMMUNITY_LIKE
			    GROUP BY COMMUNITY_NUMBER
			    HAVING COUNT(*) > 1  -- 좋아요 수가 1개 이상인 게시글 필터링
			)
			SELECT community_number COMMUNITY_NUMBER,
			community_title COMMUNITY_TITLE,
			tab_name TAB_NAME,
			tab_number TAB_NUMBER,
			community_viewcount COMMUNITY_VIEWCOUNT,
			community_date COMMUNITY_DATE,
			member_nickname MEMBER_NICKNAME,
			comment_count COMMENT_COUNT
			FROM (
			    SELECT C.COMMUNITY_NUMBER,
			           C.COMMUNITY_TITLE,
			           CT.TAB_NAME,
			           C.TAB_NUMBER,
			           C.COMMUNITY_VIEWCOUNT,
			           TO_CHAR(C.COMMUNITY_DATE, 'YYYY-MM-DD') AS COMMUNITY_DATE,
			           M.MEMBER_NICKNAME,
			           COUNT(CC.COMMUNITY_COMMENT_NUMBER) AS COMMENT_COUNT,  -- 댓글 수 카운트
			           ROW_NUMBER() OVER(ORDER BY C.COMMUNITY_DATE DESC) AS RNUM
			    FROM COMMUNITY C
			    JOIN COMMUNITY_TAB CT ON C.TAB_NUMBER = CT.TAB_NUMBER
			    JOIN MEMBER M ON C.MEMBER_NUMBER = M.MEMBER_NUMBER
			    LEFT JOIN COMMUNITY_COMMENT CC ON C.COMMUNITY_NUMBER = CC.COMMUNITY_NUMBER
			    WHERE (C.COMMUNITY_NUMBER IN (SELECT COMMUNITY_NUMBER FROM POPULAR_COMMUNITY))
	              AND (MEMBER_NICKNAME LIKE '%' || ? || '%')
			    GROUP BY C.COMMUNITY_NUMBER, C.COMMUNITY_TITLE, CT.TAB_NAME, C.TAB_NUMBER, C.COMMUNITY_VIEWCOUNT, C.COMMUNITY_DATE, 
			            M.MEMBER_NICKNAME
			)
			WHERE RNUM BETWEEN ? AND ?  -- 페이징 처리
	</entry>
	<entry key="searchWritertTabList">
		SELECT *
		FROM
		(
		    SELECT COMMUNITY_NUMBER,
		       COMMUNITY_TITLE,
		       TAB_NAME,
		       TAB_NUMBER,
		       COMMUNITY_VIEWCOUNT,
		       TO_CHAR(COMMUNITY_DATE,'YYYY-MM-DD') AS COMMUNITY_DATE,
		       MEMBER_NICKNAME,
		       COUNT(COMMUNITY_COMMENT_NUMBER) AS COMMENT_COUNT,  -- 댓글 수 카운트
		       ROW_NUMBER() OVER(ORDER BY COMMUNITY_DATE DESC) AS RNUM
		    FROM COMMUNITY
		    JOIN COMMUNITY_TAB USING(TAB_NUMBER)
		    JOIN MEMBER USING(MEMBER_NUMBER)
		    LEFT JOIN COMMUNITY_COMMENT USING(COMMUNITY_NUMBER)
            WHERE (TAB_NUMBER = ?)
              AND (MEMBER_NICKNAME LIKE '%' || ? || '%')
		    GROUP BY COMMUNITY_TAB.TAB_NAME, COMMUNITY_NUMBER, COMMUNITY_TITLE, TAB_NAME, TAB_NUMBER,
		             COMMUNITY_VIEWCOUNT, COMMUNITY_DATE, MEMBER_NICKNAME
		)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	<entry key="insertCommentReply">
		INSERT INTO COMMUNITY_COMMENT
		(
		    COMMUNITY_COMMENT_NUMBER,
		    COMMUNITY_PARENT_NUMBER,
		    COMMUNITY_NUMBER,
		    MEMBER_NUMBER,
		    COMMUNITY_COMMENT_CONTENT,
		    COMMUNITY_COMMENT_DATE
		)
		VALUES
		(
		    SEQ_COMMUNITY_COMMENT.NEXTVAL,
		    ?,
		    ?,
		    ?,
		    ?,
		    SYSDATE
		)
	</entry>
	<entry key="selectReplyList">
		SELECT COMMUNITY_COMMENT_NUMBER,
		       COMMUNITY_PARENT_NUMBER,
		       COMMUNITY_NUMBER,
		       MEMBER_NICKNAME,
		       MEMBER_NUMBER,
		       COMMUNITY_COMMENT_CONTENT,
		       COMMENT_GROUP,
		       COMMENT_DEPTH,
		       COMMENT_ORDER,
		       COMMENT_CHILD_COUNT
		FROM (
		    SELECT COMMUNITY_COMMENT_NUMBER,
		           COMMUNITY_PARENT_NUMBER,
		           COMMUNITY_NUMBER,
		           MEMBER_NICKNAME,
		           MEMBER_NUMBER,
		           COMMUNITY_COMMENT_CONTENT,
		           COMMENT_GROUP,
		           COMMENT_DEPTH,
		           COMMENT_ORDER,
		           COMMENT_CHILD_COUNT,
		           ROW_NUMBER() OVER(ORDER BY COMMENT_ORDER, COMMUNITY_COMMENT_DATE) AS RNUM
		    FROM COMMUNITY_COMMENT
		    JOIN MEMBER USING (MEMBER_NUMBER)
		    WHERE COMMUNITY_NUMBER = ?
		)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	<entry key="selectComment">
		 SELECT COMMENT_GROUP ,
				COMMENT_DEPTH ,
				COMMENT_ORDER ,
				COMMENT_CHILD_COUNT
		   FROM COMMUNITY_COMMENT
		  WHERE COMMUNITY_COMMENT_NUMBER = ?
	</entry>
	<entry key="updateParentOrder">
		UPDATE COMMUNITY_COMMENT
		   SET COMMENT_ORDER = COMMENT_ORDER + 1
		 WHERE COMMENT_NO != ?
		   AND COMMENT_GROUP = ?
		   AND COMMENT_ORDER &gt;= ?
	</entry>
	<entry key="updateParentCount">
	    -- https://gent.tistory.com/640
	    
		UPDATE COMMUNITY_COMMENT
		   SET COMMENT_CHILD_COUNT = COMMENT_CHILD_COUNT + 1
		 WHERE COMMUNITY_COMMENT_NUMBER 
		 	IN
		    ( 
		      SELECT COMMUNITY_COMMENT_NUMBER
		        FROM COMMUNITY_COMMENT
		       WHERE COMMUNITY_COMMENT_NUMBER != ?
		       -- 재귀적으로 부모 댓글 번호를 탐색한다.
		       -- CONNECT BY PRIOR 부모컬럼 = 자식컬럼
		  CONNECT BY PRIOR COMMUNITY_PARENT_NUMBER = COMMUNITY_COMMENT_NUMBER
		       -- 탐색의 시작 조건
		       -- START WITH 탐색 시작 위치
		  START WITH COMMUNITY_COMMENT_NUMBER = ? );
	</entry>
</properties>